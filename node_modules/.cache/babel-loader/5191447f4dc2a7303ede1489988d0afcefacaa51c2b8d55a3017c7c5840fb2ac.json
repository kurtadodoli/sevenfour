{"ast":null,"code":"/**\r\n * Debug utilities for the authentication system\r\n */\n\n// Check and report on the token's existence and expiration\nexport const debugToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    console.log('ðŸ”‘ No token found in localStorage');\n    return null;\n  }\n  try {\n    // JWT format is: header.payload.signature\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      console.warn('ðŸ”‘ Token does not appear to be in JWT format');\n      return token;\n    }\n\n    // Decode the payload (middle part)\n    const payload = JSON.parse(atob(parts[1]));\n\n    // Check expiration\n    if (payload.exp) {\n      const expiryDate = new Date(payload.exp * 1000);\n      const now = new Date();\n      const timeRemaining = expiryDate - now;\n      if (timeRemaining > 0) {\n        console.log(`ðŸ”‘ Token valid. Expires in: ${Math.round(timeRemaining / 1000 / 60)} minutes`);\n      } else {\n        console.warn(`ðŸ”‘ TOKEN EXPIRED ${Math.round(Math.abs(timeRemaining) / 1000 / 60)} minutes ago`);\n      }\n    } else {\n      console.log('ðŸ”‘ Token has no expiration information');\n    }\n\n    // Log token contents\n    console.log('ðŸ”‘ Token payload:', payload);\n    return payload;\n  } catch (error) {\n    console.error('ðŸ”‘ Error parsing token:', error);\n    return token;\n  }\n};\n\n// Add this utility to the window for console debugging\nif (typeof window !== 'undefined') {\n  window.debugAuth = {\n    token: debugToken,\n    clearToken: () => {\n      localStorage.removeItem('token');\n      console.log('ðŸ”‘ Token removed from localStorage');\n    }\n  };\n}\nexport default {\n  debugToken\n};","map":{"version":3,"names":["debugToken","token","localStorage","getItem","console","log","parts","split","length","warn","payload","JSON","parse","atob","exp","expiryDate","Date","now","timeRemaining","Math","round","abs","error","window","debugAuth","clearToken","removeItem"],"sources":["C:/sevenfour/src/utils/authDebug.js"],"sourcesContent":["/**\r\n * Debug utilities for the authentication system\r\n */\r\n\r\n// Check and report on the token's existence and expiration\r\nexport const debugToken = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        console.log('ðŸ”‘ No token found in localStorage');\r\n        return null;\r\n    }\r\n    \r\n    try {\r\n        // JWT format is: header.payload.signature\r\n        const parts = token.split('.');\r\n        if (parts.length !== 3) {\r\n            console.warn('ðŸ”‘ Token does not appear to be in JWT format');\r\n            return token;\r\n        }\r\n        \r\n        // Decode the payload (middle part)\r\n        const payload = JSON.parse(atob(parts[1]));\r\n        \r\n        // Check expiration\r\n        if (payload.exp) {\r\n            const expiryDate = new Date(payload.exp * 1000);\r\n            const now = new Date();\r\n            const timeRemaining = expiryDate - now;\r\n            \r\n            if (timeRemaining > 0) {\r\n                console.log(`ðŸ”‘ Token valid. Expires in: ${Math.round(timeRemaining / 1000 / 60)} minutes`);\r\n            } else {\r\n                console.warn(`ðŸ”‘ TOKEN EXPIRED ${Math.round(Math.abs(timeRemaining) / 1000 / 60)} minutes ago`);\r\n            }\r\n        } else {\r\n            console.log('ðŸ”‘ Token has no expiration information');\r\n        }\r\n        \r\n        // Log token contents\r\n        console.log('ðŸ”‘ Token payload:', payload);\r\n        return payload;\r\n    } catch (error) {\r\n        console.error('ðŸ”‘ Error parsing token:', error);\r\n        return token;\r\n    }\r\n};\r\n\r\n// Add this utility to the window for console debugging\r\nif (typeof window !== 'undefined') {\r\n    window.debugAuth = {\r\n        token: debugToken,\r\n        clearToken: () => {\r\n            localStorage.removeItem('token');\r\n            console.log('ðŸ”‘ Token removed from localStorage');\r\n        }\r\n    };\r\n}\r\n\r\nexport default { debugToken };\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,UAAU,GAAGA,CAAA,KAAM;EAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACRG,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,OAAO,IAAI;EACf;EAEA,IAAI;IACA;IACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC;IAC9B,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;MACpBJ,OAAO,CAACK,IAAI,CAAC,8CAA8C,CAAC;MAC5D,OAAOR,KAAK;IAChB;;IAEA;IACA,MAAMS,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE1C;IACA,IAAII,OAAO,CAACI,GAAG,EAAE;MACb,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACN,OAAO,CAACI,GAAG,GAAG,IAAI,CAAC;MAC/C,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;MACtB,MAAME,aAAa,GAAGH,UAAU,GAAGE,GAAG;MAEtC,IAAIC,aAAa,GAAG,CAAC,EAAE;QACnBd,OAAO,CAACC,GAAG,CAAC,+BAA+Bc,IAAI,CAACC,KAAK,CAACF,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC;MAC/F,CAAC,MAAM;QACHd,OAAO,CAACK,IAAI,CAAC,oBAAoBU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACH,aAAa,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,cAAc,CAAC;MACnG;IACJ,CAAC,MAAM;MACHd,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACzD;;IAEA;IACAD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,OAAO,CAAC;IACzC,OAAOA,OAAO;EAClB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZlB,OAAO,CAACkB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAOrB,KAAK;EAChB;AACJ,CAAC;;AAED;AACA,IAAI,OAAOsB,MAAM,KAAK,WAAW,EAAE;EAC/BA,MAAM,CAACC,SAAS,GAAG;IACfvB,KAAK,EAAED,UAAU;IACjByB,UAAU,EAAEA,CAAA,KAAM;MACdvB,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;MAChCtB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACrD;EACJ,CAAC;AACL;AAEA,eAAe;EAAEL;AAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}