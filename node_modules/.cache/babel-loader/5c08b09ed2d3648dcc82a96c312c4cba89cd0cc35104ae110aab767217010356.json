{"ast":null,"code":"import axios from 'axios';\n\n// API configuration\nconst API_URL = 'http://localhost:3001';\nconst API_TIMEOUT = 15000;\n\n// Create axios instance with improved configuration\nconst api = axios.create({\n  baseURL: `${API_URL}/api`,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Add request interceptor for authentication\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Using token from localStorage for authentication');\n  } else {\n    console.warn('No authentication token found in localStorage');\n  }\n  console.log(`ðŸ“¤ API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.baseURL}${config.url}`);\n  return config;\n}, error => {\n  console.error('ðŸ“¤ API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for logging and error handling\napi.interceptors.response.use(response => {\n  console.log(`ðŸ“¥ API Response: ${response.status} ${response.config.url}`, response.data);\n  return response;\n}, error => {\n  console.error('ðŸš« API Error:', error);\n\n  // Enhance error object with more useful information\n  const enhancedError = {\n    message: 'Unknown API error',\n    originalError: error\n  };\n  if (error.response) {\n    var _error$response$data;\n    // Server responded with an error status\n    enhancedError.status = error.response.status;\n    enhancedError.data = error.response.data;\n    enhancedError.message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || `Error ${error.response.status}`;\n  } else if (error.request) {\n    // Request was made but no response received\n    enhancedError.message = 'No response from server. Check your network connection.';\n    enhancedError.request = error.request;\n  } else {\n    // Something else caused the error\n    enhancedError.message = error.message || 'Request setup error';\n  }\n  return Promise.reject(enhancedError);\n});\n\n// Add response interceptor for handling auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","API_TIMEOUT","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","console","log","warn","method","toUpperCase","url","error","Promise","reject","response","status","data","enhancedError","message","originalError","_error$response$data","_error$response","removeItem","window","location","href"],"sources":["C:/sevenfour/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API configuration\r\nconst API_URL = 'http://localhost:3001';\r\nconst API_TIMEOUT = 15000;\r\n\r\n// Create axios instance with improved configuration\r\nconst api = axios.create({\r\n    baseURL: `${API_URL}/api`,\r\n    timeout: API_TIMEOUT,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    }\r\n});\r\n\r\n// Add request interceptor for authentication\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n            console.log('Using token from localStorage for authentication');\r\n        } else {\r\n            console.warn('No authentication token found in localStorage');\r\n        }\r\n        console.log(`ðŸ“¤ API Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`);\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('ðŸ“¤ API Request Error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add response interceptor for logging and error handling\r\napi.interceptors.response.use(\r\n    (response) => {\r\n        console.log(`ðŸ“¥ API Response: ${response.status} ${response.config.url}`, response.data);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('ðŸš« API Error:', error);\r\n        \r\n        // Enhance error object with more useful information\r\n        const enhancedError = {\r\n            message: 'Unknown API error',\r\n            originalError: error\r\n        };\r\n        \r\n        if (error.response) {\r\n            // Server responded with an error status\r\n            enhancedError.status = error.response.status;\r\n            enhancedError.data = error.response.data;\r\n            enhancedError.message = error.response.data?.message || `Error ${error.response.status}`;\r\n        } else if (error.request) {\r\n            // Request was made but no response received\r\n            enhancedError.message = 'No response from server. Check your network connection.';\r\n            enhancedError.request = error.request;\r\n        } else {\r\n            // Something else caused the error\r\n            enhancedError.message = error.message || 'Request setup error';\r\n        }\r\n        \r\n        return Promise.reject(enhancedError);\r\n    }\r\n);\r\n\r\n// Add response interceptor for handling auth errors\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}