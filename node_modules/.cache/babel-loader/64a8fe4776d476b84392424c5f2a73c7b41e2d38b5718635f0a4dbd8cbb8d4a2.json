{"ast":null,"code":"var _jsxFileName = \"C:\\\\sevenfour\\\\src\\\\pages\\\\StatusPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nconst StatusPage = () => {\n  _s();\n  const [serverStatus, setServerStatus] = useState('checking');\n  const [apiStatus, setApiStatus] = useState('checking');\n  const [registrationTest, setRegistrationTest] = useState('pending');\n  const [logs, setLogs] = useState([]);\n  const addLog = (message, type = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLogs(prev => [...prev, {\n      timestamp,\n      message,\n      type\n    }]);\n  };\n\n  // Basic server ping test\n  const checkServer = async () => {\n    try {\n      addLog('Testing basic server connectivity...');\n      const response = await axios.get(`${API_URL}`, {\n        timeout: 5000\n      });\n      addLog(`Server responded with status: ${response.status}`, 'success');\n      setServerStatus('online');\n      return true;\n    } catch (error) {\n      addLog(`Server connection failed: ${error.message}`, 'error');\n      setServerStatus('offline');\n      return false;\n    }\n  };\n\n  // Test API endpoints\n  const checkApi = async () => {\n    try {\n      addLog('Testing API health...');\n      // We'll just try a simple endpoint that doesn't require auth\n      const response = await axios.get(`${API_URL}/api/auth/health-check`);\n      if (response.data && response.data.success) {\n        addLog(`API is healthy: ${JSON.stringify(response.data)}`, 'success');\n        setApiStatus('healthy');\n        return true;\n      } else {\n        addLog('API responded but health check failed', 'warning');\n        setApiStatus('unhealthy');\n        return false;\n      }\n    } catch (error) {\n      // Try a backup endpoint if the health-check doesn't exist\n      try {\n        const response = await fetch(`${API_URL}/api`);\n        if (response.ok) {\n          addLog('API responded to backup endpoint', 'success');\n          setApiStatus('reachable');\n          return true;\n        }\n      } catch (backupError) {\n        addLog(`Backup API check also failed: ${backupError.message}`, 'error');\n      }\n      addLog(`API health check failed: ${error.message}`, 'error');\n      setApiStatus('unreachable');\n      return false;\n    }\n  };\n\n  // Test registration flow\n  const testRegistration = async () => {\n    try {\n      addLog('Testing registration API...');\n      setRegistrationTest('testing');\n\n      // Create a unique test user\n      const testUser = {\n        first_name: 'Test',\n        last_name: 'User',\n        email: `test${Date.now()}@example.com`,\n        password: 'TestPassword1!',\n        gender: 'other',\n        birthday: '1990-01-01'\n      };\n      addLog(`Sending registration request for: ${testUser.email}`);\n\n      // First try with Axios\n      try {\n        const response = await axios.post(`${API_URL}/api/auth/register`, testUser, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 10000\n        });\n        addLog(`Registration successful via Axios! Status: ${response.status}`, 'success');\n        addLog(`Response: ${JSON.stringify(response.data)}`, 'success');\n        setRegistrationTest('success-axios');\n        return true;\n      } catch (axiosError) {\n        addLog(`Axios registration failed: ${axiosError.message}`, 'warning');\n        addLog('Trying with native fetch API...', 'info');\n\n        // Try with native fetch as fallback\n        const fetchResponse = await fetch(`${API_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(testUser)\n        });\n        const data = await fetchResponse.json();\n        if (fetchResponse.ok) {\n          addLog(`Registration successful via fetch! Status: ${fetchResponse.status}`, 'success');\n          addLog(`Response: ${JSON.stringify(data)}`, 'success');\n          setRegistrationTest('success-fetch');\n          return true;\n        } else {\n          addLog(`Fetch registration failed: ${fetchResponse.status} ${fetchResponse.statusText}`, 'error');\n          addLog(`Error details: ${JSON.stringify(data)}`, 'error');\n          setRegistrationTest('failed');\n          return false;\n        }\n      }\n    } catch (error) {\n      addLog(`Registration test failed: ${error.message}`, 'error');\n      setRegistrationTest('failed');\n      return false;\n    }\n  };\n\n  // Run the tests on component mount\n  useEffect(() => {\n    const runTests = async () => {\n      const serverOnline = await checkServer();\n      if (serverOnline) {\n        const apiHealthy = await checkApi();\n        if (apiHealthy) {\n          await testRegistration();\n        }\n      }\n    };\n    runTests();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const runAllTests = () => {\n    setServerStatus('checking');\n    setApiStatus('checking');\n    setRegistrationTest('pending');\n    setLogs([]);\n    const runTests = async () => {\n      const serverOnline = await checkServer();\n      if (serverOnline) {\n        const apiHealthy = await checkApi();\n        if (apiHealthy) {\n          await testRegistration();\n        }\n      }\n    };\n    runTests();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"API Status Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatusGrid, {\n      children: [/*#__PURE__*/_jsxDEV(StatusCard, {\n        status: serverStatus,\n        children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n          children: \"Server Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StatusValue, {\n          children: serverStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StatusCard, {\n        status: apiStatus,\n        children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n          children: \"API Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StatusValue, {\n          children: apiStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StatusCard, {\n        status: registrationTest,\n        children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n          children: \"Registration API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StatusValue, {\n          children: registrationTest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: runAllTests,\n        children: \"Run All Tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LogSection, {\n      children: [/*#__PURE__*/_jsxDEV(LogTitle, {\n        children: \"Diagnostics Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogContainer, {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(LogEntry, {\n          type: log.type,\n          children: [/*#__PURE__*/_jsxDEV(LogTime, {\n            children: log.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(LogMessage, {\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(StatusPage, \"tSTF2Efam34W/GgxTc03HKKB7eU=\");\n_c = StatusPage;\nconst Container = styled.div`\n    max-width: 900px;\n    margin: 20px auto;\n    padding: 20px;\n    background-color: #f8f8f8;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Container;\nconst Title = styled.h1`\n    text-align: center;\n    margin-bottom: 20px;\n    color: #333;\n`;\n_c3 = Title;\nconst StatusGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 20px;\n    margin-bottom: 20px;\n`;\n_c4 = StatusGrid;\nconst StatusCard = styled.div`\n    padding: 20px;\n    border-radius: 8px;\n    text-align: center;\n    background-color: ${props => {\n  if (props.status === 'online' || props.status === 'healthy' || props.status === 'success-axios' || props.status === 'success-fetch') {\n    return '#d4edda';\n  } else if (props.status === 'offline' || props.status === 'unhealthy' || props.status === 'unreachable' || props.status === 'failed') {\n    return '#f8d7da';\n  } else {\n    return '#fff3cd';\n  }\n}};\n    border: 1px solid ${props => {\n  if (props.status === 'online' || props.status === 'healthy' || props.status === 'success-axios' || props.status === 'success-fetch') {\n    return '#c3e6cb';\n  } else if (props.status === 'offline' || props.status === 'unhealthy' || props.status === 'unreachable' || props.status === 'failed') {\n    return '#f5c6cb';\n  } else {\n    return '#ffeeba';\n  }\n}};\n`;\n_c5 = StatusCard;\nconst StatusTitle = styled.h3`\n    margin: 0 0 10px;\n    font-size: 16px;\n    color: #555;\n`;\n_c6 = StatusTitle;\nconst StatusValue = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    text-transform: capitalize;\n`;\n_c7 = StatusValue;\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n`;\n_c8 = ButtonContainer;\nconst Button = styled.button`\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    \n    &:hover {\n        background-color: #0069d9;\n    }\n`;\n_c9 = Button;\nconst LogSection = styled.div`\n    margin-top: 30px;\n`;\n_c0 = LogSection;\nconst LogTitle = styled.h2`\n    margin-bottom: 10px;\n    font-size: 18px;\n`;\n_c1 = LogTitle;\nconst LogContainer = styled.div`\n    background-color: #282c34;\n    border-radius: 4px;\n    padding: 15px;\n    height: 300px;\n    overflow-y: auto;\n    font-family: monospace;\n    color: #abb2bf;\n`;\n_c10 = LogContainer;\nconst LogEntry = styled.div`\n    margin-bottom: 5px;\n    padding: 3px 0;\n    border-bottom: 1px solid #3e4451;\n    color: ${props => {\n  switch (props.type) {\n    case 'error':\n      return '#e06c75';\n    case 'warning':\n      return '#d19a66';\n    case 'success':\n      return '#98c379';\n    default:\n      return '#abb2bf';\n  }\n}};\n`;\n_c11 = LogEntry;\nconst LogTime = styled.span`\n    color: #61afef;\n    margin-right: 8px;\n`;\n_c12 = LogTime;\nconst LogMessage = styled.span``;\n_c13 = LogMessage;\nexport default StatusPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"StatusPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"StatusGrid\");\n$RefreshReg$(_c5, \"StatusCard\");\n$RefreshReg$(_c6, \"StatusTitle\");\n$RefreshReg$(_c7, \"StatusValue\");\n$RefreshReg$(_c8, \"ButtonContainer\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c0, \"LogSection\");\n$RefreshReg$(_c1, \"LogTitle\");\n$RefreshReg$(_c10, \"LogContainer\");\n$RefreshReg$(_c11, \"LogEntry\");\n$RefreshReg$(_c12, \"LogTime\");\n$RefreshReg$(_c13, \"LogMessage\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","API_URL","StatusPage","_s","serverStatus","setServerStatus","apiStatus","setApiStatus","registrationTest","setRegistrationTest","logs","setLogs","addLog","message","type","timestamp","Date","toLocaleTimeString","prev","checkServer","response","get","timeout","status","error","checkApi","data","success","JSON","stringify","fetch","ok","backupError","testRegistration","testUser","first_name","last_name","email","now","password","gender","birthday","post","headers","axiosError","fetchResponse","method","body","json","statusText","runTests","serverOnline","apiHealthy","runAllTests","Container","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","StatusGrid","StatusCard","StatusTitle","StatusValue","ButtonContainer","Button","onClick","LogSection","LogTitle","LogContainer","map","log","index","LogEntry","LogTime","LogMessage","_c","div","_c2","h1","_c3","_c4","props","_c5","h3","_c6","_c7","_c8","button","_c9","_c0","h2","_c1","_c10","_c11","span","_c12","_c13","$RefreshReg$"],"sources":["C:/sevenfour/src/pages/StatusPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nconst StatusPage = () => {\r\n    const [serverStatus, setServerStatus] = useState('checking');\r\n    const [apiStatus, setApiStatus] = useState('checking');\r\n    const [registrationTest, setRegistrationTest] = useState('pending');\r\n    const [logs, setLogs] = useState([]);\r\n    \r\n    const addLog = (message, type = 'info') => {\r\n        const timestamp = new Date().toLocaleTimeString();\r\n        setLogs(prev => [...prev, { timestamp, message, type }]);\r\n    };\r\n    \r\n    // Basic server ping test\r\n    const checkServer = async () => {\r\n        try {\r\n            addLog('Testing basic server connectivity...');\r\n            const response = await axios.get(`${API_URL}`, { timeout: 5000 });\r\n            addLog(`Server responded with status: ${response.status}`, 'success');\r\n            setServerStatus('online');\r\n            return true;\r\n        } catch (error) {\r\n            addLog(`Server connection failed: ${error.message}`, 'error');\r\n            setServerStatus('offline');\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    // Test API endpoints\r\n    const checkApi = async () => {\r\n        try {\r\n            addLog('Testing API health...');\r\n            // We'll just try a simple endpoint that doesn't require auth\r\n            const response = await axios.get(`${API_URL}/api/auth/health-check`);\r\n            \r\n            if (response.data && response.data.success) {\r\n                addLog(`API is healthy: ${JSON.stringify(response.data)}`, 'success');\r\n                setApiStatus('healthy');\r\n                return true;\r\n            } else {\r\n                addLog('API responded but health check failed', 'warning');\r\n                setApiStatus('unhealthy');\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            // Try a backup endpoint if the health-check doesn't exist\r\n            try {\r\n                const response = await fetch(`${API_URL}/api`);\r\n                if (response.ok) {\r\n                    addLog('API responded to backup endpoint', 'success');\r\n                    setApiStatus('reachable');\r\n                    return true;\r\n                }\r\n            } catch (backupError) {\r\n                addLog(`Backup API check also failed: ${backupError.message}`, 'error');\r\n            }\r\n            \r\n            addLog(`API health check failed: ${error.message}`, 'error');\r\n            setApiStatus('unreachable');\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    // Test registration flow\r\n    const testRegistration = async () => {\r\n        try {\r\n            addLog('Testing registration API...');\r\n            setRegistrationTest('testing');\r\n            \r\n            // Create a unique test user\r\n            const testUser = {\r\n                first_name: 'Test',\r\n                last_name: 'User',\r\n                email: `test${Date.now()}@example.com`,\r\n                password: 'TestPassword1!',\r\n                gender: 'other',\r\n                birthday: '1990-01-01'\r\n            };\r\n            \r\n            addLog(`Sending registration request for: ${testUser.email}`);\r\n            \r\n            // First try with Axios\r\n            try {\r\n                const response = await axios.post(`${API_URL}/api/auth/register`, testUser, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    timeout: 10000\r\n                });\r\n                \r\n                addLog(`Registration successful via Axios! Status: ${response.status}`, 'success');\r\n                addLog(`Response: ${JSON.stringify(response.data)}`, 'success');\r\n                setRegistrationTest('success-axios');\r\n                return true;\r\n            } catch (axiosError) {\r\n                addLog(`Axios registration failed: ${axiosError.message}`, 'warning');\r\n                addLog('Trying with native fetch API...', 'info');\r\n                \r\n                // Try with native fetch as fallback\r\n                const fetchResponse = await fetch(`${API_URL}/api/auth/register`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(testUser)\r\n                });\r\n                \r\n                const data = await fetchResponse.json();\r\n                \r\n                if (fetchResponse.ok) {\r\n                    addLog(`Registration successful via fetch! Status: ${fetchResponse.status}`, 'success');\r\n                    addLog(`Response: ${JSON.stringify(data)}`, 'success');\r\n                    setRegistrationTest('success-fetch');\r\n                    return true;\r\n                } else {\r\n                    addLog(`Fetch registration failed: ${fetchResponse.status} ${fetchResponse.statusText}`, 'error');\r\n                    addLog(`Error details: ${JSON.stringify(data)}`, 'error');\r\n                    setRegistrationTest('failed');\r\n                    return false;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            addLog(`Registration test failed: ${error.message}`, 'error');\r\n            setRegistrationTest('failed');\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    // Run the tests on component mount\r\n    useEffect(() => {\r\n        const runTests = async () => {\r\n            const serverOnline = await checkServer();\r\n            if (serverOnline) {\r\n                const apiHealthy = await checkApi();\r\n                if (apiHealthy) {\r\n                    await testRegistration();\r\n                }\r\n            }\r\n        };\r\n        \r\n        runTests();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    \r\n    const runAllTests = () => {\r\n        setServerStatus('checking');\r\n        setApiStatus('checking');\r\n        setRegistrationTest('pending');\r\n        setLogs([]);\r\n        \r\n        const runTests = async () => {\r\n            const serverOnline = await checkServer();\r\n            if (serverOnline) {\r\n                const apiHealthy = await checkApi();\r\n                if (apiHealthy) {\r\n                    await testRegistration();\r\n                }\r\n            }\r\n        };\r\n        \r\n        runTests();\r\n    };\r\n    \r\n    return (\r\n        <Container>\r\n            <Title>API Status Check</Title>\r\n            \r\n            <StatusGrid>\r\n                <StatusCard status={serverStatus}>\r\n                    <StatusTitle>Server Status</StatusTitle>\r\n                    <StatusValue>{serverStatus}</StatusValue>\r\n                </StatusCard>\r\n                \r\n                <StatusCard status={apiStatus}>\r\n                    <StatusTitle>API Status</StatusTitle>\r\n                    <StatusValue>{apiStatus}</StatusValue>\r\n                </StatusCard>\r\n                \r\n                <StatusCard status={registrationTest}>\r\n                    <StatusTitle>Registration API</StatusTitle>\r\n                    <StatusValue>{registrationTest}</StatusValue>\r\n                </StatusCard>\r\n            </StatusGrid>\r\n            \r\n            <ButtonContainer>\r\n                <Button onClick={runAllTests}>Run All Tests</Button>\r\n            </ButtonContainer>\r\n            \r\n            <LogSection>\r\n                <LogTitle>Diagnostics Log</LogTitle>\r\n                <LogContainer>\r\n                    {logs.map((log, index) => (\r\n                        <LogEntry key={index} type={log.type}>\r\n                            <LogTime>{log.timestamp}</LogTime>\r\n                            <LogMessage>{log.message}</LogMessage>\r\n                        </LogEntry>\r\n                    ))}\r\n                </LogContainer>\r\n            </LogSection>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    max-width: 900px;\r\n    margin: 20px auto;\r\n    padding: 20px;\r\n    background-color: #f8f8f8;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    color: #333;\r\n`;\r\n\r\nconst StatusGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 20px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst StatusCard = styled.div`\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    background-color: ${props => {\r\n        if (props.status === 'online' || props.status === 'healthy' || \r\n            props.status === 'success-axios' || props.status === 'success-fetch') {\r\n            return '#d4edda';\r\n        } else if (props.status === 'offline' || props.status === 'unhealthy' || \r\n                 props.status === 'unreachable' || props.status === 'failed') {\r\n            return '#f8d7da';\r\n        } else {\r\n            return '#fff3cd';\r\n        }\r\n    }};\r\n    border: 1px solid ${props => {\r\n        if (props.status === 'online' || props.status === 'healthy' || \r\n            props.status === 'success-axios' || props.status === 'success-fetch') {\r\n            return '#c3e6cb';\r\n        } else if (props.status === 'offline' || props.status === 'unhealthy' || \r\n                 props.status === 'unreachable' || props.status === 'failed') {\r\n            return '#f5c6cb';\r\n        } else {\r\n            return '#ffeeba';\r\n        }\r\n    }};\r\n`;\r\n\r\nconst StatusTitle = styled.h3`\r\n    margin: 0 0 10px;\r\n    font-size: 16px;\r\n    color: #555;\r\n`;\r\n\r\nconst StatusValue = styled.div`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        background-color: #0069d9;\r\n    }\r\n`;\r\n\r\nconst LogSection = styled.div`\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst LogTitle = styled.h2`\r\n    margin-bottom: 10px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst LogContainer = styled.div`\r\n    background-color: #282c34;\r\n    border-radius: 4px;\r\n    padding: 15px;\r\n    height: 300px;\r\n    overflow-y: auto;\r\n    font-family: monospace;\r\n    color: #abb2bf;\r\n`;\r\n\r\nconst LogEntry = styled.div`\r\n    margin-bottom: 5px;\r\n    padding: 3px 0;\r\n    border-bottom: 1px solid #3e4451;\r\n    color: ${props => {\r\n        switch(props.type) {\r\n            case 'error': return '#e06c75';\r\n            case 'warning': return '#d19a66';\r\n            case 'success': return '#98c379';\r\n            default: return '#abb2bf';\r\n        }\r\n    }};\r\n`;\r\n\r\nconst LogTime = styled.span`\r\n    color: #61afef;\r\n    margin-right: 8px;\r\n`;\r\n\r\nconst LogMessage = styled.span``;\r\n\r\nexport default StatusPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}